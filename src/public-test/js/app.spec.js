// Generated by CoffeeScript 1.9.1
(function() {
  describe('boardController', function() {
    var $scope, controller;
    beforeEach(function() {
      return module('laserMaze');
    });
    $scope = controller = null;
    beforeEach(inject(function(_$controller_) {
      $scope = {};
      return controller = _$controller_('boardController', {
        $scope: $scope
      });
    }));
    describe('$scope.player', function() {
      it("exits", function() {
        return expect($scope.player).toBeTruthy();
      });
      it("has position", function() {
        return expect($scope.player.pos).toBeTruthy();
      });
      it("has name", function() {
        return expect($scope.player.name).toBeTruthy();
      });
      describe("can move", function() {
        var x, y;
        y = x = null;
        beforeEach(function() {
          y = $scope.player.pos.y;
          return x = $scope.player.pos.x;
        });
        it("up", function() {
          $scope.player.move("up");
          return expect($scope.player.pos.y).toBe(y - 1);
        });
        it("left", function() {
          $scope.player.move("left");
          return expect($scope.player.pos.x).toBe(x - 1);
        });
        it("down", function() {
          $scope.player.move("down");
          return expect($scope.player.pos.y).toBe(y + 1);
        });
        it("left", function() {
          $scope.player.move("right");
          return expect($scope.player.pos.x).toBe(x + 1);
        });
        return it("invalid", function() {
          return expect(function() {
            return $scope.player.move("nothing");
          }).toThrow();
        });
      });
      return describe("capture", function() {
        return it("arrow up", function() {
          return $scope.keyPressed();
        });
      });
    });
    return describe("$scope.board", function() {
      it("exits", function() {
        return expect($scope.board).toBeTruthy();
      });
      return it("is not empty", function() {
        return expect($scope.board.length).toBeGreaterThan(0);
      });
    });
  });

}).call(this);
